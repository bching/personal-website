<!DOCTYPE html>
<html>

<head>
  <title>BYCHING</title>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="assets/css/main.css?version=1" />
  <link href="https://fonts.googleapis.com/css?family=Oswald&display=swap" rel="stylesheet">
  <script type="module" src="index.js"></script>
</head>

<body id="bg">

  <%- include('header'); %>

    <div class="max-width-wrapper">
      <!-- Boyd's thoughts -->
      <div id="intro-wrapper" class="fade-in-wrapper">
        <div class="fade-in-section">
          <div class="flex-row flex-center">
            <h1>Boyd Ching</h1>
          </div>
          <div class="flex-row flex-center">
            <div class="text-box popper">
              <p>
                I am a <span id="open-dev-bubble" class="word-bg-fill">developer</span> who creates modern web applications.
              </p>
              <p>
                I am also a lifetime learner of <span id="open-lang-bubble" class="word-bg-fill">languages</span>!
              </p>
            </div>
          </div>
        </div>
      </div>

      <div class="fade-in-wrapper">
        <div class="fade-in-section">
          <div class="flex-row flex-center">
            <h2>I write some stuff!</h1>
          </div>
          <div class="post-wrapper">
            <div class="post-content">
              <h2>Post 5</h2>
              <p class="post-text">In rutrum massa arcu, sed condimentum lectus porta quis. In rhoncus massa ut turpis
                tristique
                ornare non
                eget
                augue. Integer lobortis quam ut leo tincidunt viverra. Nullam congue, sem posuere euismod
                pulvinar, arcu
                enim
                viverra diam, sed varius felis dolor eu libero. Maecenas tempus quis magna id rutrum. Donec
                magna
                libero,
                faucibus id nisl sed, pretium aliquam elit. Nullam lobortis ornare turpis, aliquet
                condimentum odio
                facilisis
                sed. Aliquam tempus malesuada mi, non sodales erat condimentum sed. Sed est justo, feugiat
                ut libero sit
                amet,
                sodales fermentum dui. Phasellus eget lectus erat. Nulla tempor metus sed varius placerat.
                Sed
                consectetur
                neque
                eu risus ultricies, sit amet tempus metus eleifend. Proin sed mauris dignissim, condimentum
                quam nec,
                sagittis
                dolor. Sed scelerisque mollis justo, ac scelerisque eros rutrum ut. Phasellus ultricies sit
                amet dolor
                id
                suscipit. Pellentesque sed sapien ac nibh elementum luctus.</p>
            </div>
            <div class="flex-row flex-center fix-bottom">
                <div class="open-post-button">
                    <div class="arrow-down">
                    </div>
                    <div class="arrow-down new-arrow">
                    </div>
                </div>
            </div>
          </div>
      
        </div>
      </div>
      
    <div class="fade-in-wrapper">
      <div class="fade-in-section">
        <div class="flex-row flex-center" style="padding-bottom: 5px;">
          <button class="play-button" onclick="execDance(0)">
            <span class="h2-style">
              GO!
            </span>
          </button>
          <button class="play-button" onclick="resetDance()">
            <img src="assets/images/Arrow-Reset.png" style="height: 80%;" />
            <!-- <span class="h2-style">
              RESET!
            </span> -->
          </button>
        </div>
        <div class="flex-row flex-center">
        </div>
      </div>
    </div>
  </div>
  <div class="flex-row flex-center">
    <div class="scene">
      <div class="carousel">
      </div>
    </div>
  </div>

    <script type="text/javascript">
      let showingSlideInBubble = false;
      const images = [];

      document.addEventListener("DOMContentLoaded", async function () {
        const slideInBubbleBtns = document.getElementsByClassName('word-bg-fill');
        for(let b of slideInBubbleBtns) {
          console.log('b', b)
          b.addEventListener('click', slideInBubble);
          // b.addEventListener('touchend', slideInBubble);
        }

        function slideInBubble(e) {
          console.log('showing in slideInBubble', showingSlideInBubble)
          const type = this.id;
          console.log('sliding in', type)
          const introWrapper = document.getElementsByClassName('fade-in-wrapper')[0];
          const bubble = document.createElement('div');
          bubble.className = 'slide-in-bubble';
          if(type === 'open-dev-bubble') {
            bubble.id = 'dev-bubble';
            bubble.innerHTML = 
            "<div class='list-wrapper'>" +
              "<div><h2>Languages</h2><ul><li>Javascript</li><li>NodeJS</li><li>Typescript</li> <li>HTML</li> <li>CSS</li></ul></div>" +
              "<div><h2>Tools & Libraries</h2> <ul> <li>ReactJS</li> <li>Express</li> <li>Git</li> <li>Docker</li> <li>Figma (designed in Figma :)</li> <li>AWS</li> </ul> </div>" +
            "</div>";
          }
          else if(type === 'open-lang-bubble') {
            bubble.id = 'lang-bubble';
            bubble.innerHTML = 
            "<div class='list-wrapper'>" +
              "<div><ul><li>Japanese</li><li>Korean</li><li>English</li><li>Thai</li></ul></div>" +
            "</div>";
          }
          showingSlideInBubble = true;
          introWrapper.appendChild(bubble);
          return;
        }

        document.addEventListener("scroll", cleanupBubbles);
          // document.addEventListener("click", cleanupBubbles);

        function cleanupBubbles() {
            console.log('showing', showingSlideInBubble)
          if(showingSlideInBubble) {
            const introWrapper = document.getElementsByClassName('fade-in-wrapper')[0];
            const slideInBubbles = document.getElementsByClassName('slide-in-bubble');
            for(let b of slideInBubbles) {
              b.classList.add('slide-out');
              window.setTimeout(function() {
                b.style.setProperty('top', 'unset')
                introWrapper.removeChild(b);
              }, 1000)
            }
            showingSlideInBubble = false;
          }
        }

        const carousel = document.getElementsByClassName('carousel')[0];
        async function createImages(index, deg=null) {
          if(index <= clipCounts[currClipIndex]) {
          // if(index <= 3) {
            asyncCreateImg(index).then((res) => {
              console.log('push', res)
              images.push(res)

              const backCard = document.createElement('img')
              backCard.style = "width: 100%; height: 100%;"
              backCard.src = `./assets/images/backcard.png`;

              const carouselCell = document.createElement("div");
              carouselCell.className = "carousel__cell";
              const frontFace = document.createElement("div");
              frontFace.className = "face-front";
              frontFace.appendChild(res);

              const backFace = document.createElement("div");
              backFace.className = "face-back";
              backFace.appendChild(backCard);

              carouselCell.appendChild(frontFace);
              carouselCell.appendChild(backFace);
              carousel.appendChild(carouselCell);

              if(deg === null) {
                carouselCell.style["transform"] = "rotateY(340deg) translateZ(50px)";

                createImages(index + 1, 340 + 2);
                return;
              }
              carouselCell.style["transform"] = `rotateY(${deg}deg) translateZ(50px)`;

              createImages(index + 1, deg + 2);
            });
          }
          console.log('images',images)
        }

        await createImages(1);
        console.log('curr images',images)
      });

      let currImgIndex = 1;
      let isDancing = false;
      let currClipIndex = 0;
      // Each value correlates to the relative 'dance-frames-<index>' folder
      const clipCounts = [58, 21];

      const carouselCells = document.getElementsByClassName('carousel__cell');

      async function execDance(nextCell, deg = null) {
        if(nextCell >= clipCounts[currClipIndex]) {
          return;
        }
        const transformStyle = carouselCells[nextCell].style.transform;
        const rotateY = transformStyle.replace(/[^\d.]/g, '');
        console.log(rotateY)
        if(deg === null) {
          carouselCells[nextCell].style["transform"]= "rotateY(140deg) translateZ(50px)";
          setTimeout(() => execDance(nextCell + 1, 140 + 2), 150);
          return
        }
        carouselCells[nextCell].style["transform"]= `rotateY(${deg}deg) translateZ(50px)`;
        setTimeout(() => execDance(nextCell + 1, deg + 2), 150);
      }

      function resetDance() {
        // for(const cell of carouselCells) {
        //   cell.classList.add('unset-transition');
        // }
        console.log('before reset',carouselCells)
        function transformNext(nextCell, deg = null) {
          if(nextCell >= clipCounts[currClipIndex]) {
            return;
          }
          if(deg === null) {
            carouselCells[nextCell].style["transform"] = "rotateY(340deg) translateZ(50px)";
            transformNext(nextCell + 1, 340 + 2);
            // setTimeout(() => transformNext(nextCell + 1, 355), 200);
            return
          }
          console.log('deg', deg)
          carouselCells[nextCell].style["transform"] = `rotateY(${deg}deg) translateZ(50px)`;
          transformNext(nextCell + 1, deg + 2);
          // setTimeout(() => transformNext(nextCell + 1, deg + 15), 200);
        }
        transformNext(0);
        console.log('after reset',carouselCells)
        // for(const cell of carouselCells) {
        //   cell.classList.remove('unset-transition');
        // }
      }

      function fadeTransition() {
        const canvas = document.getElementById('canvas');
        const ctx = canvas.getContext('2d');
        const img = createImg(currImgIndex);
        return new Promise((res) => {
          img.addEventListener('load', () => {
            const id = window.setInterval(() => {
              if(ctx.globalAlpha - 0.05 <= 0) {
                console.log('clearinterval')
                window.clearInterval(id);
                fadeOut = true;
                return res();
              }
              ctx.globalAlpha -= 0.05;
              ctx.clearRect(0, 0, canvas.width, canvas.height);
              ctx.drawImage(img, 0, 0);
            }, 30)
          })
        })
      }

      function renderNextFrame(timeoutId = null) {
        const canvas = document.getElementById('canvas');
        const ctx = canvas.getContext('2d');
        console.log('currIndex', currImgIndex)
          // Start cycling next images
        if(currImgIndex >= clipCounts[currClipIndex] + 1) {
          window.clearInterval(timeoutId);

          console.log(images)
          console.log('load img at ', images[images.length - 1])
          // Reset last image globalAlpha
          ctx.globalAlpha = 1;
          ctx.clearRect(0, 0, canvas.width, canvas.height);
          ctx.drawImage(images[images.length - 1], 0, 0);
          currImgIndex = 1;
          isDancing = false;
          return;
        } else {
          // Next image
          const newImg = createImg(currImgIndex);
          console.log('newImg', newImg);

          fadeTransition().then((res) => {
            // Handle end of array
            console.log('out of fade')
            const id = window.setTimeout(() => {
              console.log('new timeout')
              currImgIndex += 1;
              ctx.globalAlpha = 1;
              console.log('after fading', ctx.globalAlpha);
              renderNextFrame(id);
            }, 100);
          });
        }
      }

      function createImg(imgIndex) {
        const image = document.createElement('img');
        image.id = "halo-frame";
        image.className = "center-self";
        image.style = "width: 100%; height: 100%;"
        image.src = `./assets/frames/frame${currImgIndex}.jpg`;
        return image;
      }

      function asyncCreateImg(imgIndex) {
        return new Promise((res) => {
          const image = document.createElement('img');
          image.id = "halo-frame";
          image.className = "center-self";
          image.style = "width: 100%; height: 100%;"
          image.src = `./assets/frames/frame${imgIndex}.jpg`;
          return res(image);
        })
      }

      function renderFrame(img = null) {
        const canvas = document.getElementById('canvas');
        const ctx = canvas.getContext('2d');

        if (img) {
          canvas.width = 1080;
          canvas.height = 1920;
          ctx.drawImage(img, 0, 0);
          return;
        }
        const image = createImg(currImgIndex);
        image.addEventListener('load', () => {
          ctx.drawImage(image, 0, 0);
        })
      }

      // document.addEventListener("DOMContentLoaded", function () {
      //     const posts = document.getElementsByClassName('post-wrapper');
      //     if (window.mobileCheck()) {
      //       console.log('mobile checked')
      //         for (let p of posts) {
      //             // p.addEventListener('touchstart', expandPost, true);
      //             // p.addEventListener('click', togglePost, true);
      //         }
      //     }
      //     else {
      //       for (let p of posts) {
      //           p.addEventListener('mouseover', expandPost, true);
      //           p.addEventListener('mouseleave', shrinkPost, true);
      //       }
      //     }
      // });

      // function togglePost(e) {
      //     if(!e.target.classList.contains('hover')) {
      //         shrinkPost(e);
      //         return;
      //     }
      //     expandPost().bind(this);
      // }

      // function expandPost(e = null) {
      //     console.log('expand')
      //     console.log('this:',this)
      //     this.classList.add('hover');
      //     window.setTimeout(() => {
      //         const postText = this.querySelector('div.post-content > p.post-text');
      //         postText.style.setProperty('-webkit-line-clamp', 'unset');
      //     }, 200);
      // }
      // function shrinkPost(e = null) {
      //     if(e && e.target !== this) {
      //         return;
      //     }
      //     this.classList.remove('hover');
      //     window.setTimeout(() => {
      //         const postText = this.querySelector('div.post-content > p.post-text');
      //         postText.style.setProperty('-webkit-line-clamp', '4');
      //     }, 200);
      // }

      // function nextClip() {
      //   const imgRange = document.getElementById('img-range');
      //   currClipIndex = currClipIndex + 1;
      //   if (currClipIndex > 1) {
      //     currClipIndex = 0;
      //   }
      //   imgRange.max = clipCounts[currClipIndex];
      //   currImgIndex = 1;
      //   renderFrame();
      // }

    </script>
</body>

</html>
